version: '3.8'
services:

    #postgres: Third party open source sql db
    postgres:
        container_name: postgres
        hostname: postgres
        image: postgres:12.3
        ports:
          - "5432:5432"
        environment:
          - POSTGRES_USER=${SQL_USER_NAME}
          - POSTGRES_PASSWORD=${SQL_USER_PASSWORD}
          - POSTGRES_DB=${SQL_DEMO_DB}
        volumes:
            - ./data/sql_script:/docker-entrypoint-initdb.d
        networks:
            - spring-docker   

    #pgadmin4: Third party open source web gui for sql db
    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4
        depends_on:
            - postgres
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_USER_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_USER_PASSWORD}
        networks:
            - spring-docker      
      
    demospringsqlbackend:
        image: orbartal/spring-demo-sql:latest
        hostname: demospringsql
        container_name: demospringsqlbackend
        depends_on:
            - postgres
        ports:
            - 8080:8080
        environment:
        #SQL
            - SPRING_PROFILES_ACTIVE=comp
            - SQL_DB_TYPE=postgres
            - SQL_DB_URL=jdbc:postgresql://postgres:5432/${SQL_DEMO_DB}
            - SQL_DB_USER=${SQL_USER_NAME}
            - SQL_DB_PASSWORD=${SQL_USER_PASSWORD}
            - SQL_DB_SHOWSQL=false
        networks:
            - spring-docker

    demospringsqltester:
        image: orbartal/spring-demo-sql-tester:latest
        hostname: demospringsqltester
        container_name: demospringsqltester
        depends_on:
            - demospringsqlbackend
        ports:
            - 8090:8090
        networks:
            - spring-docker
        environment:
            - demo.backend.url=http://demospringsqlbackend:8080        
networks:
    spring-docker:
   
